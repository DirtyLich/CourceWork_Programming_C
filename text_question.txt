ВАРИАНТ 4.3 Алгоритм Лемпела – Зива (Lempel – Ziv) LZ77
Задание
Реализовать программу lz77compress сжатия текстовых файлов на английском языке алгоритмом Зива-Лемпела. Сжатие осуществляется с аргументом
командной строки -c (compress), а распаковка – с аргументом -d (decompress).
Опция -o указывает имя выходного файла. 
	Например:
$ lz77compress -c -o file.lz77 file.txt # сжатие file.txt в file.lz77
$ lz77compress -d -o file1.txt file.lz77 # распаковка file.lz77 в file1.txt

	Критерии оценки
Оценка «хорошо»: реализован алгоритм сжатия, для записи кодов в
файл используются структуры данных.
Оценка «отлично»: можно задать любой размер словаря и буфера, для
формирования файлового элемента используется битовый массив (как описано
в общей информации к разделу 4).
Указание к выполнению задания
LZ77 использует скользящее по сообщению окно. Метод кодирования согласно принципу скользящего окна учитывает уже ранее встречавшуюся информацию, то есть информацию, которая уже известна для кодировщика и декодировщика (второе и последующие вхождения некоторой строки символов в
сообщении заменяются ссылками на ее первое вхождение). Окно состоит из
двух частей – словаря (большая часть) и буфера. Первая, большая по размеру,
включает уже просмотренную часть сообщения. Вторая, меньшая по размеру,
содержит еще незакодированные символы входного потока. Алгоритм пытается
найти в словаре фрагмент, совпадающий с содержимым буфера. Алгоритм
LZ77 выдает коды, состоящие из трех элементов:
• смещение подстроки, совпадающей с началом содержимого буфера,
относительно начала словаря;
• длина этой подстроки;
• первый символ буфера, следующий за подстрокой.
В конце итерации алгоритм сдвигает окно на длину равную длине подстроки, обнаруженной в словаре.
Рассмотрим алгоритм на примере. Пусть нам необходимо закодировать
строку: «про проверку и проведение проводки». При кодировании будем использовать окно размером 23 символа, где первые 15 символов будут словарем,
а следующие 8 – буфером. 